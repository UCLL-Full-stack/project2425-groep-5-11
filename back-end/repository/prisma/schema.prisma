generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  accountId Int      @unique @default(autoincrement())

  account    Account?
  watchlists Watchlist[]
  reviews    Review[]
}

model Account {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  bio       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Movie {
  id             Int         @id @default(autoincrement())
  director       String
  genre          String
  description    String
  title          String
  duration       Int
  ageRating      Int
  poster         String?
  createdAt      DateTime    @default(now())
  watchlistItems Watchlist[]
  reviews        Review[]
}

model Watchlist {
  userId    Int
  movieId   Int
  createdAt DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  movie Movie @relation(fields: [movieId], references: [id], onDelete: Cascade)

  @@unique([userId, movieId])
}

model Review {
  id        Int      @id @default(autoincrement())
  userId    Int
  movieId   Int
  rating    Int
  text      String
  createdAt DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  movie Movie @relation(fields: [movieId], references: [id], onDelete: Cascade)

  @@unique([userId, movieId])
}
